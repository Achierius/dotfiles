# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Debug

### Variables
#
# Mod4 for logo key. Mod1 for Alt. Ctrl for Ctrl.
# Windowing modifier
set $wmod Mod4 
# For compat w/ other sway files: e.g. /usr/share/sway/config.d/65-mode-passthrough.conf
set $mod $wmod
# Application modifier -- used to be Mod1
set $amod Ctrl+$wmod

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# Recommends: foot
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
set $rofi_cmd rofi         -terminal '$term' -show-icons
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland
set $menu $rofi_cmd -show combi -combi-modes "drun,run" -modes combi
set $wmenu $rofi_cmd -show window


# Checkout https://git.sr.ht/~oscarcp/ghostfiles/tree/master/sway_wm

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
    output * bg /home/marcus/Pictures/Desktop\ Backgrounds/current fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
    set $output_primary DP-3
    set $output_secondary HDMI-A-2
    set $output_auxiliary HDMI-A-1
    output $output_primary pos 0 1080
    output $output_secondary pos 3840 1080
    output $output_auxiliary resolution 2560x1440 pos 2558 0

### Idle configuration: Lives in 90-swayidle.conf

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
    # You can get the names of your inputs by running: swaymsg -t get_inputs
    # Read `man 5 sway-input` for more information about this section.
    input "type:keyboard" xkb_options caps:swapescape

### Aesthetics 
    gaps inner 10

    # Font
    # To list fonts: `pango-list`
    font pango:Inconsolata Nerd Font 12

    # TODO try Swaycons https://github.com/allie-wake-up/swaycons
    # title_window_icon yes

    

### Key bindings
#
# Basics:
#
    # Kill focused window
    bindsym $wmod+Shift+q kill

    # Start application launcher
    bindsym $amod+Space exec $menu
    # Start application launcher IN CASE I BREAK THINGS
    bindsym Mod1+Space exec $menu

    # Start window switcher
    bindsym $wmod+Space exec $wmenu

    # Drag floating windows by holding down $wmod and left mouse button.
    # Resize them with right mouse button + $wmod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $wmod normal

    # Reload the configuration file
    bindsym $wmod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $wmod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $wmod+$left focus left
    bindsym $wmod+$down focus down
    bindsym $wmod+$up focus up
    bindsym $wmod+$right focus right
    # Or use $wmod+[up|down|left|right]
    bindsym $wmod+Left focus left
    bindsym $wmod+Down focus down
    bindsym $wmod+Up focus up
    bindsym $wmod+Right focus right

    # Move your focus around DISPLAYS
    bindsym Ctrl+$wmod+$left focus output left
    bindsym Ctrl+$wmod+$down focus output down
    bindsym Ctrl+$wmod+$up focus output up
    bindsym Ctrl+$wmod+$right focus output right
    # Or use $wmod+[up|down|left|right]
    bindsym Ctrl+$wmod+Left focus output left
    bindsym Ctrl+$wmod+Down focus output down
    bindsym Ctrl+$wmod+Up focus output up
    bindsym Ctrl+$wmod+Right focus output right

    # TODO switch workspaces between two displays

    # Move the focused window with the same, but add Shift
    bindsym $wmod+Shift+$left move left
    bindsym $wmod+Shift+$down move down
    bindsym $wmod+Shift+$up move up
    bindsym $wmod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $wmod+Shift+Left move left
    bindsym $wmod+Shift+Down move down
    bindsym $wmod+Shift+Up move up
    bindsym $wmod+Shift+Right move right
#
# Workspaces:
#
    # Define workspaces
    set $ws1 1 Comms
    set $ws2 2 Utils
    set $ws3 3 Devel
    set $ws4 4 Organization
    set $ws5 5 Web:Devel
    set $ws6 6 Web:Useful
    set $ws7 7 Web:Browsing
    set $ws8 8 Video
    set $ws9 9 Games
    set $ws0 0 Spare

    # Switch to workspace
    bindsym $wmod+1 workspace number $ws1
    bindsym $wmod+2 workspace number $ws2
    bindsym $wmod+3 workspace number $ws3
    bindsym $wmod+4 workspace number $ws4
    bindsym $wmod+5 workspace number $ws5
    bindsym $wmod+6 workspace number $ws6
    bindsym $wmod+7 workspace number $ws7
    bindsym $wmod+8 workspace number $ws8
    bindsym $wmod+9 workspace number $ws9
    bindsym $wmod+0 workspace number $ws0
    # Move focused container to workspace
    bindsym $wmod+Shift+1 move container to workspace number $ws1
    bindsym $wmod+Shift+2 move container to workspace number $ws2
    bindsym $wmod+Shift+3 move container to workspace number $ws3
    bindsym $wmod+Shift+4 move container to workspace number $ws4
    bindsym $wmod+Shift+5 move container to workspace number $ws5
    bindsym $wmod+Shift+6 move container to workspace number $ws6
    bindsym $wmod+Shift+7 move container to workspace number $ws7
    bindsym $wmod+Shift+8 move container to workspace number $ws8
    bindsym $wmod+Shift+9 move container to workspace number $ws9
    bindsym $wmod+Shift+0 move container to workspace number $ws0
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    bindsym Ctrl+$wmod+Shift+Right move workspace to output right
    bindsym Ctrl+$wmod+Shift+Left move workspace to output left
    bindsym Ctrl+$wmod+Shift+Up move workspace to output up
    bindsym Ctrl+$wmod+Shift+Down move workspace to output down
    bindsym Ctrl+$wmod+Shift+$right move workspace to output right
    bindsym Ctrl+$wmod+Shift+$left move workspace to output left
    bindsym Ctrl+$wmod+Shift+$up move workspace to output up
    bindsym Ctrl+$wmod+Shift+$down move workspace to output down
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $wmod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $wmod+b splith
    bindsym $wmod+v splitv

    # Switch the current container between different layout styles
    bindsym $wmod+s layout stacking
    bindsym $wmod+w layout tabbed
    bindsym $wmod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $wmod+z fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $wmod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $wmod+f focus mode_toggle

    # Move focus to the parent container
    bindsym $wmod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $wmod+Shift+minus move scratchpad
    bindsym $wmod+asciitilde move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $wmod+minus scratchpad show
    bindsym $wmod+grave scratchpad show

#
# Resizing containers:
#
  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym $left resize shrink width 10px
      bindsym $down resize grow height 10px
      bindsym $up resize shrink height 10px
      bindsym $right resize grow width 10px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $wmod+r mode "resize"

#
# Application shortcuts
#

  mode "launch" {
      bindsym s exec swaymsg '[class="Signal"] focus' ; mode "default"
      bindsym o exec swaymsg '[class="obsidian"] focus' ; mode "default"
      bindsym m exec swaymsg '[class="Marvin"] focus' ; mode "default"
      bindsym b exec swaymsg '[title="btop"] focus' ; mode "default"
      bindsym Return exec swaymsg '[class="Claude"] focus' ; mode "default"

      bindsym t exec $term ; mode "default"
      bindsym f exec firefox ; mode "default"

      bindsym Escape mode "default"
  }
  bindsym $amod+Return mode "launch"

#
# Startup applications & workspace associations
#
  # To set defaults: assign [class="Firefox"] workspace 7
  assign [class="Signal"] workspace number $ws1
  assign [class="Discord"] workspace number $ws1
  assign [class="Spotify"] workspace number $ws2
  assign [class="steam"] workspace number $ws9
  assign [app_id="OpenRGB"] workspace number $ws2
  assign [class="looking-glass-client"] workspace number $ws9
  assign [class="TeamSpeak 3"] workspace number $ws9
  assign [class="virt-manager"] workspace number $ws2
  assign [class="Marvin"] workspace number $ws4
  assign [class="obsidian"] workspace number $ws4
  assign [title="btop"] workspace number $ws2

  workspace number $ws1
  exec "move workspace to output $output_auxiliary""
  workspace number $ws2
  exec "move workspace to output $output_secondary; layout default tabbed"
  workspace number $ws3
  exec "move workspace to output $output_primary; layout default splith"
  workspace number $ws4
  exec "move workspace to output $output_secondary; layout default tabbed"
  workspace number $ws5
  exec "move workspace to output $output_secondary"
  workspace number $ws6
  exec "move workspace to output $output_primary"
  workspace number $ws7
  exec "move workspace to output $output_secondary"
  workspace number $ws8
  exec "move workspace to output $output_primary"
  workspace number $ws9
  exec "move workspace to output $output_primary"
  workspace number $ws3
  exec 'foot -D ~/Sys/ tmux'
  exec 'foot -D ~/Sys/ -T btop -a btop btop'
  #exec 'steam'
  exec 'openrgb'
  exec 'virt-manager'
  exec 'TeamSpeak 3'
  exec 'flatpak run org.signal.Signal'
  exec 'flatpak run com.spotify.Client'
  workspace number $ws4
  # TODO there has to be a better way. If not, I need to add an indirection so this can work across systems
  exec 'gio launch ~/.local/share/applications/appimagekit_3d85219fc56d384946e26630ad34cd2a-Marvin.desktop'
  exec 'flatpak run md.obsidian.Obsidian', exec "'[class=\\"Obsidian\\"]' focus"

  # For Wayland-native apps use app_id instead of class
  #exec "flatpak run org.signal.Signal" && sway '[class="Signal"]' move container to workspace $ws1
  #exec "flatpak run com.discordapp.Discord" && sway '[class="discord"]' move container to workspace 1
  #exec "flatpak run md.obsidian.Obsidian" && sway '[class="obsidian"]' move container to workspace 4

#
# General system utilities
#
  # TODO make this work
  # https://www.reddit.com/r/swaywm/comments/goxsce/dropdown_terminal_for_sway/
  #bindsym $wmod+Grave exec ~/.config/sway/dropdown_terminal.sh

  # Screenshots
  # TODO move to $amod?
  bindsym $wmod+Shift+s exec grimshot copy area

  # Clipboard history
  exec wl-paste --watch cliphist store
  bindsym $amod+v exec cliphist list | rofi -dmenu | cliphist decode | wl-copy

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
